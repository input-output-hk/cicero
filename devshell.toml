imports = [
  "language.go"
]

[[env]]
name = "CONSOLE_LOGGING_ENABLED"
value = "true"

[[env]]
name = "DATABASE_URL"
value = "postgres://postgres:@127.0.0.1:15432/cicero?sslmode=disable"

[[env]]
name = "LOKI_ADDR"
value = "http://127.0.0.1:13100"

[[env]]
name = "VAULT_ADDR"
value = "http://127.0.0.1:18200"

[[env]]
name = "NOMAD_ADDR"
value = "http://127.0.0.1:14646"

# Put stuff into OCI images built with Tullia.
[[env]]
name = "CICERO_EVALUATOR_NIX_EXTRA_ARGS"
value = """
{
	rootDir = let
		nixpkgs = builtins.getFlake "github:NixOS/nixpkgs/93950edf017d6a64479069fbf271aa92b7e44d7f";
		pkgs = nixpkgs.legacyPackages.${system};
	in
		# for transformers
		pkgs.bash;
}
"""

[[env]]
name = "CICERO_EVALUATOR_NIX_OCI_REGISTRY"
value = "docker://127.0.0.1:15000"

[[env]]
name = "CICERO_EVALUATOR_NIX_OCI_REGISTRY_SKOPEO_COPY_ARGS"
value = "--dest-tls-verify=false"

[[commands]]
package = "go"

[[commands]]
package = "dbmate"

[[commands]]
package = "gouml"

[[commands]]
package = "schemathesis"

[[commands]]
package = "nomad"

[[commands]]
package = "vault"

[[commands]]
package = "damon"

[[commands]]
name = "lint"
command = "golangci-lint run -E gocritic --timeout 5m && treefmt --fail-on-change"
help = "Run code linters"

[[commands]]
name = "dev-cicero"
command = "dbmate up; go run . start --log-level trace --victoriametrics-addr http://127.0.0.1:18428 --prometheus-addr http://127.0.0.1:13100 --web-listen :18080 --transform dev-cicero-transformer \"$@\""
help = "Run Cicero from source"

[[commands]]
name = "psqlc"
command = "psql -d \"$DATABASE_URL\" \"$@\""
help = "psql into Cicero DB"

[devshell]
name = "cicero"
packages = [
  # cicero
  "cicero-evaluator-nix",
  "dev-cicero-transformer",

  # go
  "go",
  "gcc",
  "gocode",
  "gotools",
  "gopls",
  "go-mockery",
  "golangci-lint",

  # formatting
  "treefmt",
  "alejandra",
  "treefmt-cue",

  # deployment
  "cue",
  "nomad-follower",
  "postgresql",
  "vector",
  "grafana-loki",

  # tools
  "nixos-shell",
  "httpie",
  "curlie",
  "diffutils",
  "jq",
]
